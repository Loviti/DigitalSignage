
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}


Prisma.skip = skip




/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.DeviceScalarFieldEnum = {
  id: 'id',
  screenId: 'screenId',
  token: 'token',
  connectionCode: 'connectionCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isOnline: 'isOnline'
};

exports.Prisma.DeviceStatusScalarFieldEnum = {
  id: 'id',
  deviceId: 'deviceId',
  isOnline: 'isOnline',
  createdAt: 'createdAt'
};

exports.Prisma.DeviceTelemetryScalarFieldEnum = {
  id: 'id',
  deviceId: 'deviceId',
  localIpAddress: 'localIpAddress',
  publicIpAddress: 'publicIpAddress',
  macAddress: 'macAddress',
  softwareVersion: 'softwareVersion',
  platform: 'platform',
  osRelease: 'osRelease',
  screenResolutionWidth: 'screenResolutionWidth',
  screenResolutionHeight: 'screenResolutionHeight',
  hostname: 'hostname',
  timezone: 'timezone',
  totalMemory: 'totalMemory',
  freeMemory: 'freeMemory',
  createdAt: 'createdAt'
};

exports.Prisma.EmailVerificationTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userId: 'userId',
  newEmail: 'newEmail',
  createdAt: 'createdAt'
};

exports.Prisma.FileScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  extension: 'extension',
  mimeType: 'mimeType',
  previewPath: 'previewPath',
  size: 'size',
  type: 'type',
  path: 'path',
  width: 'width',
  height: 'height',
  duration: 'duration',
  defaultDuration: 'defaultDuration',
  md5: 'md5',
  folderId: 'folderId',
  availabilityStartAt: 'availabilityStartAt',
  availabilityEndAt: 'availabilityEndAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt',
  uploaderId: 'uploaderId'
};

exports.Prisma.FileUploadSessionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  path: 'path',
  size: 'size',
  uploaded: 'uploaded',
  parts: 'parts',
  mimeType: 'mimeType',
  workspaceId: 'workspaceId',
  uploadId: 'uploadId',
  folderId: 'folderId',
  userId: 'userId',
  createdAt: 'createdAt',
  completedAt: 'completedAt'
};

exports.Prisma.FolderScalarFieldEnum = {
  id: 'id',
  name: 'name',
  workspaceId: 'workspaceId',
  parentId: 'parentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.PlaylistScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  playlistLayoutId: 'playlistLayoutId',
  name: 'name',
  description: 'description',
  size: 'size',
  type: 'type',
  isPublished: 'isPublished',
  priority: 'priority',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.PlaylistItemScalarFieldEnum = {
  id: 'id',
  playlistId: 'playlistId',
  type: 'type',
  duration: 'duration',
  playlistLayoutSectionId: 'playlistLayoutSectionId',
  fileId: 'fileId',
  nestedPlaylistId: 'nestedPlaylistId',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlaylistLayoutScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  resolutionWidth: 'resolutionWidth',
  resolutionHeight: 'resolutionHeight',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlaylistLayoutSectionScalarFieldEnum = {
  id: 'id',
  playlistLayoutId: 'playlistLayoutId',
  name: 'name',
  top: 'top',
  left: 'left',
  width: 'width',
  height: 'height',
  zIndex: 'zIndex'
};

exports.Prisma.PlaylistScheduleScalarFieldEnum = {
  id: 'id',
  playlistId: 'playlistId',
  startAt: 'startAt',
  endAt: 'endAt',
  startTime: 'startTime',
  endTime: 'endTime',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  weekdays: 'weekdays'
};

exports.Prisma.PlaylistScreenScalarFieldEnum = {
  playlistId: 'playlistId',
  screenId: 'screenId'
};

exports.Prisma.ScreenScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  groupId: 'groupId',
  name: 'name',
  layoutRotation: 'layoutRotation',
  resolutionWidth: 'resolutionWidth',
  resolutionHeight: 'resolutionHeight',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ScreenGroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  workspaceId: 'workspaceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  createdAt: 'createdAt',
  revokedAt: 'revokedAt',
  lastActivityAt: 'lastActivityAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  emailVerifiedAt: 'emailVerifiedAt',
  name: 'name',
  password: 'password',
  profilePhoto: 'profilePhoto',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.UserPreferencesScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  locale: 'locale',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserWorkspaceScalarFieldEnum = {
  userId: 'userId',
  workspaceId: 'workspaceId',
  workspaceInvitationId: 'workspaceInvitationId',
  role: 'role',
  permissions: 'permissions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkspaceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  status: 'status',
  picture: 'picture',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkspaceUserInvitationScalarFieldEnum = {
  id: 'id',
  email: 'email',
  status: 'status',
  workspaceId: 'workspaceId',
  invitorId: 'invitorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.PlaylistItemType = exports.$Enums.PlaylistItemType = {
  File: 'File',
  NestedPlaylist: 'NestedPlaylist'
};

exports.Weekday = exports.$Enums.Weekday = {
  MONDAY: 'MONDAY',
  TUESDAY: 'TUESDAY',
  WEDNESDAY: 'WEDNESDAY',
  THURSDAY: 'THURSDAY',
  FRIDAY: 'FRIDAY',
  SATURDAY: 'SATURDAY',
  SUNDAY: 'SUNDAY'
};

exports.LayoutRotation = exports.$Enums.LayoutRotation = {
  R0: 'R0',
  R90: 'R90',
  R180: 'R180',
  R270: 'R270'
};

exports.Prisma.ModelName = {
  Device: 'Device',
  DeviceStatus: 'DeviceStatus',
  DeviceTelemetry: 'DeviceTelemetry',
  EmailVerificationToken: 'EmailVerificationToken',
  File: 'File',
  FileUploadSession: 'FileUploadSession',
  Folder: 'Folder',
  Playlist: 'Playlist',
  PlaylistItem: 'PlaylistItem',
  PlaylistLayout: 'PlaylistLayout',
  PlaylistLayoutSection: 'PlaylistLayoutSection',
  PlaylistSchedule: 'PlaylistSchedule',
  PlaylistScreen: 'PlaylistScreen',
  Screen: 'Screen',
  ScreenGroup: 'ScreenGroup',
  Session: 'Session',
  User: 'User',
  UserPreferences: 'UserPreferences',
  UserWorkspace: 'UserWorkspace',
  Workspace: 'Workspace',
  WorkspaceUserInvitation: 'WorkspaceUserInvitation'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\dev\\screenlite\\server\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters",
      "strictUndefinedChecks"
    ],
    "sourceFilePath": "D:\\dev\\screenlite\\server\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.8.2",
  "engineVersion": "2060c79ba17c6bb9f5823312b6f6b7f4a845738e",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "model Device {\n  id             String   @id @default(uuid())\n  screenId       String?  @unique\n  token          String   @unique\n  connectionCode String   @unique\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n  isOnline       Boolean  @default(false)\n\n  screen    Screen?           @relation(fields: [screenId], references: [id], onDelete: SetNull)\n  telemetry DeviceTelemetry[]\n  statusLog DeviceStatus[]\n\n  @@index([token])\n  @@index([connectionCode])\n  @@index([screenId])\n}\n\nmodel DeviceStatus {\n  id        String   @id @default(uuid())\n  deviceId  String\n  isOnline  Boolean\n  createdAt DateTime @default(now())\n\n  device Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)\n\n  @@index([deviceId])\n}\n\nmodel DeviceTelemetry {\n  id                     String   @id @default(uuid())\n  deviceId               String\n  localIpAddress         String?\n  publicIpAddress        String?\n  macAddress             String?\n  softwareVersion        String?\n  platform               String?\n  osRelease              String?\n  screenResolutionWidth  Int?\n  screenResolutionHeight Int?\n  hostname               String?\n  timezone               String?\n  totalMemory            BigInt?\n  freeMemory             BigInt?\n  createdAt              DateTime @default(now())\n\n  device Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)\n\n  @@index([deviceId])\n}\n\nmodel EmailVerificationToken {\n  id        String   @id @default(uuid())\n  token     String   @unique\n  userId    String\n  newEmail  String?\n  createdAt DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel File {\n  id                  String    @id @default(uuid())\n  workspaceId         String\n  name                String\n  extension           String\n  mimeType            String\n  previewPath         String?\n  size                BigInt\n  type                String\n  path                String    @unique\n  width               Int?\n  height              Int?\n  duration            Int?\n  // TODO: Implement defaultDuration\n  defaultDuration     Int?\n  md5                 String?\n  folderId            String?\n  availabilityStartAt DateTime?\n  availabilityEndAt   DateTime?\n  createdAt           DateTime  @default(now())\n  updatedAt           DateTime  @updatedAt\n  deletedAt           DateTime?\n  uploaderId          String?\n\n  folder        Folder?        @relation(fields: [folderId], references: [id], onDelete: Cascade)\n  workspace     Workspace      @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  uploader      User?          @relation(fields: [uploaderId], references: [id], onDelete: SetNull)\n  playlistItems PlaylistItem[]\n\n  @@index([workspaceId])\n  @@index([folderId])\n  @@index([uploaderId])\n  @@index([deletedAt])\n  @@index([name])\n}\n\nmodel FileUploadSession {\n  id          String    @id @default(uuid())\n  name        String\n  path        String\n  size        BigInt\n  uploaded    BigInt    @default(0)\n  parts       Int       @default(0)\n  mimeType    String    @default(\"application/octet-stream\")\n  workspaceId String\n  uploadId    String\n  folderId    String?\n  userId      String\n  createdAt   DateTime  @default(now())\n  completedAt DateTime?\n\n  folder    Folder?   @relation(fields: [folderId], references: [id], onDelete: SetNull)\n  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Folder {\n  id          String    @id @default(uuid())\n  name        String\n  workspaceId String\n  parentId    String?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  deletedAt   DateTime?\n\n  workspace          Workspace           @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  parent             Folder?             @relation(\"FolderToFolder\", fields: [parentId], references: [id], onDelete: Cascade)\n  subfolders         Folder[]            @relation(\"FolderToFolder\")\n  files              File[]\n  fileUploadSessions FileUploadSession[]\n\n  @@index([parentId])\n}\n\nmodel Playlist {\n  id               String    @id @default(uuid())\n  workspaceId      String\n  playlistLayoutId String?\n  name             String\n  description      String    @default(\"\")\n  size             BigInt    @default(0)\n  type             String    @default(\"standard\")\n  isPublished      Boolean   @default(false)\n  priority         Int       @default(0)\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @updatedAt\n  deletedAt        DateTime?\n\n  workspace Workspace       @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  layout    PlaylistLayout? @relation(fields: [playlistLayoutId], references: [id], onDelete: SetNull)\n\n  items       PlaylistItem[]\n  parentItems PlaylistItem[]     @relation(\"PlaylistAsNestedPlaylist\")\n  screens     PlaylistScreen[]\n  schedules   PlaylistSchedule[]\n}\n\nenum PlaylistItemType {\n  File\n  NestedPlaylist\n}\n\nmodel PlaylistItem {\n  id                      String           @id @default(uuid())\n  playlistId              String\n  type                    PlaylistItemType\n  duration                Int?\n  playlistLayoutSectionId String\n  fileId                  String?\n  nestedPlaylistId        String?\n  order                   Int\n  createdAt               DateTime         @default(now())\n  updatedAt               DateTime         @updatedAt\n\n  playlist              Playlist              @relation(fields: [playlistId], references: [id], onDelete: Cascade)\n  file                  File?                 @relation(fields: [fileId], references: [id], onDelete: Cascade)\n  nestedPlaylist        Playlist?             @relation(\"PlaylistAsNestedPlaylist\", fields: [nestedPlaylistId], references: [id], onDelete: Cascade)\n  playlistLayoutSection PlaylistLayoutSection @relation(fields: [playlistLayoutSectionId], references: [id], onDelete: Cascade)\n\n  @@index([playlistId])\n  @@index([fileId])\n}\n\nmodel PlaylistLayout {\n  id               String   @id @default(uuid())\n  workspaceId      String\n  name             String\n  resolutionWidth  Int\n  resolutionHeight Int\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n\n  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n\n  playlists Playlist[]\n  sections  PlaylistLayoutSection[]\n\n  @@index([name])\n}\n\nmodel PlaylistLayoutSection {\n  id               String @id @default(uuid())\n  playlistLayoutId String\n  name             String\n  top              Int\n  left             Int\n  width            Int\n  height           Int\n  zIndex           Int\n\n  playlistLayout PlaylistLayout @relation(fields: [playlistLayoutId], references: [id], onDelete: Cascade)\n  playlistItems  PlaylistItem[]\n}\n\nenum Weekday {\n  MONDAY\n  TUESDAY\n  WEDNESDAY\n  THURSDAY\n  FRIDAY\n  SATURDAY\n  SUNDAY\n}\n\nmodel PlaylistSchedule {\n  id         String    @id @default(uuid())\n  playlistId String\n  startAt    DateTime\n  endAt      DateTime?\n  startTime  String?\n  endTime    String?\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n\n  playlist Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)\n\n  weekdays Weekday[]\n}\n\nmodel PlaylistScreen {\n  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)\n  playlistId String\n  screen     Screen   @relation(fields: [screenId], references: [id], onDelete: Cascade)\n  screenId   String\n\n  @@id([playlistId, screenId])\n}\n\nenum LayoutRotation {\n  R0\n  R90\n  R180\n  R270\n}\n\nmodel Screen {\n  id               String         @id @default(uuid())\n  workspaceId      String\n  groupId          String?\n  name             String\n  layoutRotation   LayoutRotation @default(R0)\n  resolutionWidth  Int\n  resolutionHeight Int\n  type             String\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n\n  workspace Workspace        @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  device    Device?\n  playlists PlaylistScreen[]\n  group     ScreenGroup?     @relation(fields: [groupId], references: [id], onDelete: SetNull)\n\n  @@index([workspaceId])\n  @@index([groupId])\n}\n\nmodel ScreenGroup {\n  id          String    @id @default(uuid())\n  name        String\n  workspaceId String\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  deletedAt   DateTime?\n\n  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  screens   Screen[]\n\n  @@index([workspaceId])\n}\n\nmodel Session {\n  id             String    @id @default(uuid())\n  userId         String\n  token          String    @unique\n  userAgent      String\n  ipAddress      String\n  createdAt      DateTime  @default(now())\n  revokedAt      DateTime?\n  lastActivityAt DateTime  @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([revokedAt])\n}\n\nmodel User {\n  id              String    @id @default(uuid())\n  email           String    @unique\n  emailVerifiedAt DateTime?\n  name            String\n  password        String\n  profilePhoto    String?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n  deletedAt       DateTime?\n\n  emailVerificationTokens EmailVerificationToken[]\n  sessions                Session[]\n  workspaces              UserWorkspace[]\n  userPreferences         UserPreferences[]\n  uploadedFiles           File[]\n  fileUploadSessions      FileUploadSession[]\n  sentInvitations         WorkspaceUserInvitation[]\n}\n\nmodel UserPreferences {\n  id        String   @id @default(uuid())\n  userId    String\n  locale    String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel UserWorkspace {\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId                String\n  workspace             Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  workspaceId           String\n  workspaceInvitationId String?   @unique\n  role                  String    @default(\"member\")\n  permissions           String[]  @default([])\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n\n  workspaceInvitation WorkspaceUserInvitation? @relation(fields: [workspaceInvitationId], references: [id], onDelete: SetNull)\n\n  @@id([userId, workspaceId])\n}\n\nmodel Workspace {\n  id        String   @id @default(uuid())\n  name      String\n  slug      String   @unique\n  status    String\n  picture   String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  members            UserWorkspace[]\n  screens            Screen[]\n  playlists          Playlist[]\n  layouts            PlaylistLayout[]\n  files              File[]\n  folders            Folder[]\n  fileUploadSessions FileUploadSession[]\n  userInvitations    WorkspaceUserInvitation[]\n  screenGroups       ScreenGroup[]\n}\n\nmodel WorkspaceUserInvitation {\n  id          String   @id @default(uuid())\n  email       String\n  status      String   @default(\"pending\")\n  workspaceId String\n  invitorId   String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  invitor   User?     @relation(fields: [invitorId], references: [id], onDelete: SetNull)\n\n  members UserWorkspace[]\n\n  @@index([email])\n}\n\n// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"strictUndefinedChecks\", \"driverAdapters\"]\n  output          = \"../generated/client\"\n}\n",
  "inlineSchemaHash": "0c2bf529434b5b5fd908907b4016b4c27173d612bc0689e294a3536b2afa3878",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Device\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"screenId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"connectionCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isOnline\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"screen\",\"kind\":\"object\",\"type\":\"Screen\",\"relationName\":\"DeviceToScreen\"},{\"name\":\"telemetry\",\"kind\":\"object\",\"type\":\"DeviceTelemetry\",\"relationName\":\"DeviceToDeviceTelemetry\"},{\"name\":\"statusLog\",\"kind\":\"object\",\"type\":\"DeviceStatus\",\"relationName\":\"DeviceToDeviceStatus\"}],\"dbName\":null},\"DeviceStatus\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isOnline\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToDeviceStatus\"}],\"dbName\":null},\"DeviceTelemetry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"localIpAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicIpAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"macAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"softwareVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"osRelease\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"screenResolutionWidth\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"screenResolutionHeight\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hostname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalMemory\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"freeMemory\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToDeviceTelemetry\"}],\"dbName\":null},\"EmailVerificationToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmailVerificationTokenToUser\"}],\"dbName\":null},\"File\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"extension\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previewPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"defaultDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"md5\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"folderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availabilityStartAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"availabilityEndAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploaderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"folder\",\"kind\":\"object\",\"type\":\"Folder\",\"relationName\":\"FileToFolder\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"FileToWorkspace\"},{\"name\":\"uploader\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FileToUser\"},{\"name\":\"playlistItems\",\"kind\":\"object\",\"type\":\"PlaylistItem\",\"relationName\":\"FileToPlaylistItem\"}],\"dbName\":null},\"FileUploadSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"uploaded\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"parts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"folderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"folder\",\"kind\":\"object\",\"type\":\"Folder\",\"relationName\":\"FileUploadSessionToFolder\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"FileUploadSessionToWorkspace\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FileUploadSessionToUser\"}],\"dbName\":null},\"Folder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"FolderToWorkspace\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Folder\",\"relationName\":\"FolderToFolder\"},{\"name\":\"subfolders\",\"kind\":\"object\",\"type\":\"Folder\",\"relationName\":\"FolderToFolder\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"FileToFolder\"},{\"name\":\"fileUploadSessions\",\"kind\":\"object\",\"type\":\"FileUploadSession\",\"relationName\":\"FileUploadSessionToFolder\"}],\"dbName\":null},\"Playlist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"playlistLayoutId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"PlaylistToWorkspace\"},{\"name\":\"layout\",\"kind\":\"object\",\"type\":\"PlaylistLayout\",\"relationName\":\"PlaylistToPlaylistLayout\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"PlaylistItem\",\"relationName\":\"PlaylistToPlaylistItem\"},{\"name\":\"parentItems\",\"kind\":\"object\",\"type\":\"PlaylistItem\",\"relationName\":\"PlaylistAsNestedPlaylist\"},{\"name\":\"screens\",\"kind\":\"object\",\"type\":\"PlaylistScreen\",\"relationName\":\"PlaylistToPlaylistScreen\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"PlaylistSchedule\",\"relationName\":\"PlaylistToPlaylistSchedule\"}],\"dbName\":null},\"PlaylistItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"playlistId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PlaylistItemType\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"playlistLayoutSectionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nestedPlaylistId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"playlist\",\"kind\":\"object\",\"type\":\"Playlist\",\"relationName\":\"PlaylistToPlaylistItem\"},{\"name\":\"file\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"FileToPlaylistItem\"},{\"name\":\"nestedPlaylist\",\"kind\":\"object\",\"type\":\"Playlist\",\"relationName\":\"PlaylistAsNestedPlaylist\"},{\"name\":\"playlistLayoutSection\",\"kind\":\"object\",\"type\":\"PlaylistLayoutSection\",\"relationName\":\"PlaylistItemToPlaylistLayoutSection\"}],\"dbName\":null},\"PlaylistLayout\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolutionWidth\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resolutionHeight\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"PlaylistLayoutToWorkspace\"},{\"name\":\"playlists\",\"kind\":\"object\",\"type\":\"Playlist\",\"relationName\":\"PlaylistToPlaylistLayout\"},{\"name\":\"sections\",\"kind\":\"object\",\"type\":\"PlaylistLayoutSection\",\"relationName\":\"PlaylistLayoutToPlaylistLayoutSection\"}],\"dbName\":null},\"PlaylistLayoutSection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"playlistLayoutId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"top\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"left\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"zIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"playlistLayout\",\"kind\":\"object\",\"type\":\"PlaylistLayout\",\"relationName\":\"PlaylistLayoutToPlaylistLayoutSection\"},{\"name\":\"playlistItems\",\"kind\":\"object\",\"type\":\"PlaylistItem\",\"relationName\":\"PlaylistItemToPlaylistLayoutSection\"}],\"dbName\":null},\"PlaylistSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"playlistId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"playlist\",\"kind\":\"object\",\"type\":\"Playlist\",\"relationName\":\"PlaylistToPlaylistSchedule\"},{\"name\":\"weekdays\",\"kind\":\"enum\",\"type\":\"Weekday\"}],\"dbName\":null},\"PlaylistScreen\":{\"fields\":[{\"name\":\"playlist\",\"kind\":\"object\",\"type\":\"Playlist\",\"relationName\":\"PlaylistToPlaylistScreen\"},{\"name\":\"playlistId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"screen\",\"kind\":\"object\",\"type\":\"Screen\",\"relationName\":\"PlaylistScreenToScreen\"},{\"name\":\"screenId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Screen\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"layoutRotation\",\"kind\":\"enum\",\"type\":\"LayoutRotation\"},{\"name\":\"resolutionWidth\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resolutionHeight\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"ScreenToWorkspace\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToScreen\"},{\"name\":\"playlists\",\"kind\":\"object\",\"type\":\"PlaylistScreen\",\"relationName\":\"PlaylistScreenToScreen\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"ScreenGroup\",\"relationName\":\"ScreenToScreenGroup\"}],\"dbName\":null},\"ScreenGroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"ScreenGroupToWorkspace\"},{\"name\":\"screens\",\"kind\":\"object\",\"type\":\"Screen\",\"relationName\":\"ScreenToScreenGroup\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revokedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastActivityAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePhoto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailVerificationTokens\",\"kind\":\"object\",\"type\":\"EmailVerificationToken\",\"relationName\":\"EmailVerificationTokenToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"workspaces\",\"kind\":\"object\",\"type\":\"UserWorkspace\",\"relationName\":\"UserToUserWorkspace\"},{\"name\":\"userPreferences\",\"kind\":\"object\",\"type\":\"UserPreferences\",\"relationName\":\"UserToUserPreferences\"},{\"name\":\"uploadedFiles\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"FileToUser\"},{\"name\":\"fileUploadSessions\",\"kind\":\"object\",\"type\":\"FileUploadSession\",\"relationName\":\"FileUploadSessionToUser\"},{\"name\":\"sentInvitations\",\"kind\":\"object\",\"type\":\"WorkspaceUserInvitation\",\"relationName\":\"UserToWorkspaceUserInvitation\"}],\"dbName\":null},\"UserPreferences\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locale\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPreferences\"}],\"dbName\":null},\"UserWorkspace\":{\"fields\":[{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserWorkspace\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"UserWorkspaceToWorkspace\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceInvitationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspaceInvitation\",\"kind\":\"object\",\"type\":\"WorkspaceUserInvitation\",\"relationName\":\"UserWorkspaceToWorkspaceUserInvitation\"}],\"dbName\":null},\"Workspace\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"picture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"UserWorkspace\",\"relationName\":\"UserWorkspaceToWorkspace\"},{\"name\":\"screens\",\"kind\":\"object\",\"type\":\"Screen\",\"relationName\":\"ScreenToWorkspace\"},{\"name\":\"playlists\",\"kind\":\"object\",\"type\":\"Playlist\",\"relationName\":\"PlaylistToWorkspace\"},{\"name\":\"layouts\",\"kind\":\"object\",\"type\":\"PlaylistLayout\",\"relationName\":\"PlaylistLayoutToWorkspace\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"FileToWorkspace\"},{\"name\":\"folders\",\"kind\":\"object\",\"type\":\"Folder\",\"relationName\":\"FolderToWorkspace\"},{\"name\":\"fileUploadSessions\",\"kind\":\"object\",\"type\":\"FileUploadSession\",\"relationName\":\"FileUploadSessionToWorkspace\"},{\"name\":\"userInvitations\",\"kind\":\"object\",\"type\":\"WorkspaceUserInvitation\",\"relationName\":\"WorkspaceToWorkspaceUserInvitation\"},{\"name\":\"screenGroups\",\"kind\":\"object\",\"type\":\"ScreenGroup\",\"relationName\":\"ScreenGroupToWorkspace\"}],\"dbName\":null},\"WorkspaceUserInvitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invitorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"WorkspaceToWorkspaceUserInvitation\"},{\"name\":\"invitor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorkspaceUserInvitation\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"UserWorkspace\",\"relationName\":\"UserWorkspaceToWorkspaceUserInvitation\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

