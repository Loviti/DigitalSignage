services:
  # Node.js Backend Service
  server:
    build:
      context: ./server
      dockerfile: ./docker/Dockerfile.dev
    container_name: screenlite-server
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/src/generated/prisma
      - /app/tmp
      - screenlite_storage:/app/storage
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/screenlite
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - STORAGE_TYPE=s3
      - S3_PORT=9000
      - S3_ACCESS_KEY=screenlite
      - S3_SECRET_KEY=screenlite
      - S3_ENDPOINT=http://minio
      - S3_REGION=us-east-1
      - CORS_ORIGINS=http://localhost:3001,http://screenlite.org
      - FFMPEG_SERVICE_URL=http://ffmpeg-service:3002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      ffmpeg-service:
        condition: service_healthy
    networks:
      - default
      - ffmpeg-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 10s
      retries: 10

  # Sandboxed FFmpeg Service
  ffmpeg-service:
    build:
      context: ./ffmpeg-service
      dockerfile: ./docker/Dockerfile.dev
    container_name: screenlite-ffmpeg-service
    environment:
      - NODE_ENV=production
      - PORT=3002
      - ALLOWED_ORIGINS=http://localhost:3000,http://server:3000
    volumes:
      - ffmpeg_logs:/var/log/ffmpeg
    networks:
      - ffmpeg-network
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # React Frontend Service
  client:
    build:
      context: ./client
      dockerfile: ./docker/Dockerfile.dev
    container_name: screenlite-client
    ports:
      - "3001:3001"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000/
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: screenlite-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: screenlite
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d screenlite" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: screenlite-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # MinIO Service
  minio:
    image: minio/minio
    container_name: screenlite-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: screenlite
      MINIO_ROOT_PASSWORD: screenlite
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - default
      - ffmpeg-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9001/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

volumes:
  screenlite_storage:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  ffmpeg_logs:
    driver: local

networks:
  ffmpeg-network:
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.20.0.0/16
